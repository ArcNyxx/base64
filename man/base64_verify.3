.\" base64 - simple encoding library
.\" Copyright (C) 2022 FearlessDoggo21
.\" see LICENCE file for licensing information
.TH BASE64_VERIFY 3 base64\-VERSION
.SH NAME
base64_verify \- verify base64 encoded information
.SH SYNOPSIS
.EX
#include <base64.h>

bool base64_verify(const char *\fIstring\fR, size_t \fIlength\fP);
.EE
.SH DESCRIPTION
\fBbase64_verify\fP(3) verifies whether the data stored in \fIstring\fP, with
a length of \fIlength\fP bytes, is base64 encoded.
.SH RETURN VALUE
\fBbase64_verify\fP(3) returns \fBtrue\fP if the data is base64 encoded and
\fBfalse\fP otherwise.
.SH NOTES
The \fIlength\fP parameter does not include any NUL ('\\0') characters which
may terminate the data, only the data itself.
.SH EXAMPLE
.EX
#include <base64.h>
#include <stdio.h>
#include <string.h>

int
main(void)
{
	static const char *data = "SGVsbG8gV29ybGQhCg";

	if (base64_verify(data, strlen(data))) {
		/* creates the output buffer of the exact size necessary */
		size_t len = base64_decode_len(strlen(data));
		char buffer[len + 1];
		buffer[len] = '\\0';

		/* encodes then and prints the encoded data */
		base64_decode(data, strlen(data), buffer);
		printf("%s", buffer);
	} else {
		printf("\\"%s\\" is not base64 encoded.\\n", data);
	}
}
.EE
.SH AUTHOR
Written by FearlessDoggo21.
.SH SEE ALSO
\fBbase64_encode\fP(3), \fBbase64_decode\fP(3), \fBbase64_encode_len\fP(3),
\fBbase64_decode_len\fP(3)
